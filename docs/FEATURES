Full featurelist of SharpIRC
-------------------------------------

- 4 layered API
  - IrcConnection (low-level API)
    contains socket handling and message buffer
  - IrcCommands (extends IrcConnection, middle-level API)
    contains RFC IRC commands plus easy to use IRC methods (like Op/Deop/Ban/Unban...)
  - IrcClient (extends IrcCommands, high-level API)
    full featured IRC class, with channel syncing, fully event driven
  - IrcClient (extends IrcClient, high-level API)
    additional IRC features which extend the RFC (CTCP, DCC, ServerProperties)
- send/receive floodprotection
- detects and changes nickname on nickname collisions
- autoreconnect, if connection is lost
- autoretry for connecting to IRC servers
- debugging/logging system with log levels (using log4net)
- compatible with Mono and Micrsoft .NET Framework
- sendbuffer with a queue that has 3 priority levels (high, medium, low) plus a bypass level (critical)
- channel syncing (tracking of users/modes/topic etc in objects)
- user syncing (tracking the user in channels, nick/ident/host/realname/server/hopcount in objects)
- when channel syncing is acticated the following methods are available:
  - IsJoined
  - IsOpped
  - IsVoiced
  - IsBanned
- on reconnect all joined channels will be rejoined, also when keys are used
- own CTCP version reply can be set
